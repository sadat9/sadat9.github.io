{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1XobLbrHkCVaWx62ZeoLxeMLSqAL53VXa","timestamp":1751654655136},{"file_id":"1LYJfp82z7vsINKTyxASrLVo1gkC-W4DX","timestamp":1751548900572},{"file_id":"1_2x50mm7ym47M8EGxHDsxDt4PPH-NWuY","timestamp":1751546558775}],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"Qfayf7NSMr-a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1751658813649,"user_tz":-360,"elapsed":331,"user":{"displayName":"sadat rahman","userId":"00315844507455805433"}},"outputId":"1f25a19e-19b7-4c8a-d294-9e8f8857d722"},"outputs":[{"output_type":"stream","name":"stdout","text":["--2025-07-05 07:05:57--  https://ml-hiring.fringecore.sh/capture_the_scene/video.mp4\n","Resolving ml-hiring.fringecore.sh (ml-hiring.fringecore.sh)... 104.21.75.216, 172.67.182.61, 2606:4700:3031::6815:4bd8, ...\n","Connecting to ml-hiring.fringecore.sh (ml-hiring.fringecore.sh)|104.21.75.216|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 3700355 (3.5M) [video/mp4]\n","Saving to: ‘video/video.mp4.3’\n","\n","video.mp4.3         100%[===================>]   3.53M  --.-KB/s    in 0.02s   \n","\n","2025-07-05 07:05:57 (202 MB/s) - ‘video/video.mp4.3’ saved [3700355/3700355]\n","\n"]}],"source":["# @title Get Video\n","!wget -P video/ \"https://ml-hiring.fringecore.sh/capture_the_scene/video.mp4\""]},{"cell_type":"markdown","source":["# Function to Implement"],"metadata":{"id":"Xr8XVaQcS6of"}},{"cell_type":"code","source":["import cv2\n","import os\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","def process_video_for_pano(video_path):\n","    cap = cv2.VideoCapture(video_path)\n","    if not cap.isOpened():\n","        print(f\"Error: Could not open video file {video_path}\")\n","        return None\n","\n","    frames = []\n","    while cap.isOpened():\n","        ret, frame = cap.read()\n","        if not ret:\n","            break\n","        frames.append(frame)\n","\n","    cap.release()\n","\n","    if not frames:\n","        print(\"Error: No frames were extracted from the video.\")\n","        return None\n","\n","\n","    stitcher = cv2.Stitcher.create()\n","    if stitcher is None:\n","\n","        stitcher = cv2.Stitcher_create()\n","        if stitcher is None:\n","            print(\"Error: Could not create OpenCV Stitcher object.\")\n","            return None\n","\n","\n","    status, pano = stitcher.stitch(frames)\n","\n","    if status != cv2.Stitcher_OK:\n","        print(f\"Error: Could not stitch images. Status code: {status}\")\n","        return None\n","\n","    if pano is None:\n","        print(\"Error: Panorama could not be generated.\")\n","        return None\n","\n","\n","    pano_rgb = cv2.cvtColor(pano, cv2.COLOR_BGR2RGB)\n","\n","    plt.figure(figsize=(20, 10))\n","    plt.imshow(pano_rgb)\n","    plt.axis('off')\n","    plt.title('Generated Panorama')\n","    plt.show()\n","\n","\n","    path_to_pano = '/content/panorama.png'\n","\n","\n","    success = cv2.imwrite(path_to_pano, pano)\n","\n","    if not success:\n","\n","        print(f\"Error: Could not save panorama to {path_to_pano}\")\n","\n","        return None\n","    else:\n","        print(f\"Panorama saved successfully to {path_to_pano}\")\n","\n","        return path_to_pano"],"metadata":{"id":"EAuhKIj-SvgN","executionInfo":{"status":"ok","timestamp":1751658816349,"user_tz":-360,"elapsed":36,"user":{"displayName":"sadat rahman","userId":"00315844507455805433"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["# Eval"],"metadata":{"id":"314uyzUxSbhI"}},{"cell_type":"code","source":["# @title Get Pano\n","\n","video_file_path = '/content/video/video.mp4'\n","process_video_for_pano(video_file_path)\n"],"metadata":{"id":"OYLJ9ymBP6kR"},"execution_count":null,"outputs":[]}]}